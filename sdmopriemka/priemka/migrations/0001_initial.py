# Generated by Django 4.2.20 on 2025-03-24 11:49

from django.conf import settings
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import pgtrigger.compiler
import pgtrigger.migrations


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AppointmentStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='AppointmentTheme',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='ElectoralDistrict',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rolename', models.CharField(db_index=True, max_length=25, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Deputy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_name', models.CharField(blank=True, max_length=50)),
                ('first_name', models.CharField(blank=True, max_length=50)),
                ('patronymic_name', models.CharField(blank=True, max_length=50, null=True)),
                ('position', models.CharField(blank=True, max_length=255)),
                ('email', models.EmailField(blank=True, max_length=50, null=True)),
                ('image', models.CharField(blank=True, max_length=255, null=True)),
                ('electoral_district', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.PROTECT, to='priemka.electoraldistrict')),
            ],
            options={
                'index_together': {('last_name', 'first_name', 'patronymic_name', 'position', 'electoral_district')},
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('login', models.CharField(max_length=25, unique=True)),
                ('password', models.CharField(max_length=255)),
                ('last_name', models.CharField(blank=True, max_length=50)),
                ('first_name', models.CharField(blank=True, max_length=50)),
                ('patronymic_name', models.CharField(blank=True, max_length=50, null=True)),
                ('email', models.EmailField(blank=True, max_length=50, null=True)),
                ('creation_date', models.DateTimeField(auto_now=True)),
                ('join_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('role', models.ForeignKey(blank=True, default=0, on_delete=django.db.models.deletion.PROTECT, to='priemka.role')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'index_together': {('login', 'password', 'last_name', 'first_name', 'patronymic_name')},
            },
        ),
        migrations.CreateModel(
            name='DeputySchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_of_week', models.IntegerField(blank=True, max_length=1)),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('is_available', models.BooleanField(blank=True, default=False)),
                ('max_appointments_per_day', models.IntegerField(blank=True, max_length=255)),
                ('deputy', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='priemka.deputy')),
            ],
            options={
                'index_together': {('deputy', 'day_of_week', 'start_time', 'end_time', 'is_available')},
            },
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
                ('creation_date', models.DateTimeField(auto_now=True)),
                ('appointed_date', models.DateTimeField(verbose_name='appointed date')),
                ('is_archived', models.BooleanField(blank=True, default=False)),
                ('appointment_status', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='priemka.appointmentstatus')),
                ('appointment_theme', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='priemka.appointmenttheme')),
                ('deputy', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='priemka.deputy')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'index_together': {('deputy', 'user', 'title', 'appointment_theme', 'appointed_date')},
            },
        ),
        pgtrigger.migrations.AddTrigger(
            model_name='user',
            trigger=pgtrigger.compiler.Trigger(name='user', sql=pgtrigger.compiler.UpsertTriggerSql(func='UPDATE "priemka_user" SET is_active = False WHERE "id" = OLD."id"; RETURN NULL;', hash='2621d5ec406efedb2278fc670b93b4513e1fcaf6', operation='DELETE', pgid='pgtrigger_user_2a257', table='priemka_user', when='BEFORE')),
        ),
    ]
